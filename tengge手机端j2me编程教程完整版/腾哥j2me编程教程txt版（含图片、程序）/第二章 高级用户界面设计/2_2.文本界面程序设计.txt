/*这一节，我们将学习文本界面程序的编写，并学习按钮的添加、按钮动作添加，还要学习菜单的创建，以及文本界面文字的添加、删除、获取，以及光标的移动，障碍的设置，够多吧，看代码！*/

import javax.microedition.midlet.MIDlet;
import javax.microedition.lcdui.*;

//因为我们要为按钮添加动作，必须有个监听器检测我们按按钮的动作，于是implements CommandListener，注意使用该接口，必须重载一个public void commandAction(Command c,Displayable d)方法，以添加按钮动作！
public class Midlet extends MIDlet implements CommandListener
{
    Display display;
    
    //声明记事本示例
    TextBox textbox;
    
    //声明多个按钮，主要是让大家看到菜单效果
    Command exit,delete,position,insert,help;
    public Midlet()
    {
        display=Display.getDisplay(this);
        
        //创建一个记事本实例
        textbox=new TextBox("记事本","这是我做的记事本软件！",250,TextField.ANY);
        //四个参数分别是标题、默认值、最大允许输入、允许输入类型
        //允许输入类型如下：
        //TextField.ANY无约束
        //TextField.EMAILADDR邮箱地址
        //TextField.NUMERIC数学
        //TextField.PASSWORD密码
        //TextField.PHONENUMBER电话号码
        //TextField.URL网址
        //TextField.CONSTRAINT_MASK分离掩码，可进行两种约束
        
        //初始化按钮实例
        exit=new Command("退出",Command.EXIT,2);
        position=new Command("位置",Command.SCREEN,2);
        insert=new Command("插入",Command.ITEM,2);
        help=new Command("帮助",Command.HELP,2);
        delete=new Command("删除",Command.ITEM,2);
        //创建按钮的四个参数分别是名称、类型、优先级。
        //类型有以下几种：
        //Command.OK确定
        //Command.ITEM项目
        //Command.CANCEL取消
        //Command.EXIT退出
        //Command.HELP帮助
        //Command.STOP停止
        //Command.SCREEN屏幕
        //类型没什么用处，只是方便虚拟机排列按钮：如哪个放右键，哪个应该放在左键菜单什么位置合适
        //优先级没用，写2即可。
        
        /*向文本界面添加按钮*/
        textbox.addCommand(exit);
        textbox.addCommand(position);
        textbox.addCommand(insert);
        textbox.addCommand(help);
        textbox.addCommand(delete);
        }
    
    public void startApp()
    {
        //当前界面设为文本界面
        display.setCurrent(textbox);
        //设置监听当前类的按钮动作
        textbox.setCommandListener(this);
        }
    
    /*按钮动作监听方法*/
    public void commandAction(Command c,Displayable d)
    {
        if(c==exit)//按退出按钮
        {
            destroyApp(true);
            //通知虚拟机退出程序
            notifyDestroyed();}
        if(c==position)//按位置按钮
        {
            textbox.setString("以前位置："+textbox.getCaretPosition());
            //int getCaretPosition()取得当前光标位置
            //void setString(String)设置文本内容
            }
        if(c==insert)//按插入按钮
        {
            //如当前屏幕内容
            String s=textbox.getString();
            //插入内容到开头
            textbox.insert("当前内容：",0);
            }
        if(c==help)//按帮助按钮
        {
            textbox.setString("无帮助");
            }
        if(c==delete)//按删除按钮
        {
            try{
                textbox.delete(3,1);
                //从第三个位置删除一个字符，因为可能不到三个字符，会出错，所以用try
                }
            catch(Exception e){}
            }
        }
    
    public void pauseApp() {}
    public void destroyApp(boolean a){}
    }

/*本节可直接改后缀编译。j2me中的菜单其实就是按钮多了放不下了，就形成菜单。
其他方法：
int getChars(char[] data);
//按照字符数组的形式获取TextBox的内容
int getConstraints();
//获取输入约束
int getMaxSize();
//获取这个TextBox可以保存最大的字符长度
void setChars(char[] data,int offset,int length);
//用新的值来替换字符
void setConstraints(int constraints);
//改变输入约束
int setMaxSize(int maxSize);
//改变TextBox可以保存的最大的字符长度

附图及示范软件。

作者：tengge
QQ：930372551
*/